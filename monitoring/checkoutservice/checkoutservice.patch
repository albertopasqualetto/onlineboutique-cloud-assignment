diff --git a/main.go b/main.go
index aa98a51..1376643 100644
--- a/main.go
+++ b/main.go
@@ -15,6 +15,10 @@
 package main

 import (
+	grpcprom "github.com/grpc-ecosystem/go-grpc-middleware/providers/prometheus"
+	"github.com/prometheus/client_golang/prometheus"
+	"github.com/prometheus/client_golang/prometheus/promhttp"
+	"net/http"
 	"context"
 	"fmt"
 	"net"
@@ -43,6 +47,8 @@ import (
 const (
 	listenPort  = "5050"
 	usdCurrency = "USD"
+
+	promHttpAddr = ":9090"
 )

 var log *logrus.Logger
@@ -127,19 +133,38 @@ func main() {
 		log.Fatal(err)
 	}

-	var srv *grpc.Server
-
 	// Propagate trace context always
 	otel.SetTextMapPropagator(
 		propagation.NewCompositeTextMapPropagator(
 			propagation.TraceContext{}, propagation.Baggage{}))
+
+
+	srvMetrics := grpcprom.NewServerMetrics(
+		grpcprom.WithServerHandlingTimeHistogram(
+			grpcprom.WithHistogramBuckets([]float64{0.001, 0.01, 0.1, 0.3, 0.6, 1, 3, 6, 9, 20, 30, 60, 90, 120}),
+		),
+	)
+	// reg := prometheus.NewRegistry()
+	// reg.MustRegister(srvMetrics)
+
+	var srv *grpc.Server
+
 	srv = grpc.NewServer(
-		grpc.UnaryInterceptor(otelgrpc.UnaryServerInterceptor()),
-		grpc.StreamInterceptor(otelgrpc.StreamServerInterceptor()),
+		grpc.ChainUnaryInterceptor(srvMetrics.UnaryServerInterceptor()),
+		grpc.ChainStreamInterceptor(srvMetrics.StreamServerInterceptor()),
 	)
+	srvMetrics.InitializeMetrics(srv)
+	prometheus.MustRegister(srvMetrics)

 	pb.RegisterCheckoutServiceServer(srv, svc)
 	healthpb.RegisterHealthServer(srv, svc)
+
+	go func() {
+		log.Info("starting HTTP server", "addr", promHttpAddr)
+		http.Handle("/metrics", promhttp.Handler())
+		http.ListenAndServe(promHttpAddr, nil)
+	}()
+
 	log.Infof("starting to listen on tcp: %q", lis.Addr().String())
 	err = srv.Serve(lis)
 	log.Fatal(err)

diff --git a/go.mod b/go.mod
index 2ecdf9c..e86ddf5 100644
--- a/go.mod
+++ b/go.mod
@@ -3,6 +3,8 @@ module github.com/GoogleCloudPlatform/microservices-demo/src/checkoutservice
 go 1.23

 require (
+	github.com/grpc-ecosystem/go-grpc-middleware/providers/prometheus v1.0.1
+	github.com/prometheus/client_golang v1.20.5
 	cloud.google.com/go/profiler v0.4.1
 	github.com/google/uuid v1.6.0
 	github.com/pkg/errors v0.9.1
